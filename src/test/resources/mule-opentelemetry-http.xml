<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:opentelemetry="http://www.mulesoft.org/schema/mule/opentelemetry" xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/opentelemetry http://www.mulesoft.org/schema/mule/opentelemetry/current/mule-opentelemetry.xsd">

	<import file="global-common.xml"/>

	<http:request-config name="INVALID_HTTP_BasePath_Request_configuration" doc:name="HTTP Request configuration"  basePath="/api" >
		<http:request-connection host="0.0.0.0" port="9085" />
	</http:request-config>
	<http:request-config name="SELF_EXPRESSION_HTTP_Request_configuration" doc:name="HTTP Request configuration" doc:id="c18eed36-eb42-4c29-abc9-9e7a2c6049e1" >
		<http:request-connection host="#[vars.hostname]" port="${http.port}" />
	</http:request-config>
	<flow name="http-json-status"  >
		<http:listener doc:name="Listener"  config-ref="HTTP_Listener_config" path="/test-json-status"/>
		<logger level="INFO" doc:name="Logger"  />
		<set-payload value="Received in App2" doc:name="Set Payload"  />
		<set-variable variableName="httpStatus" value="#[output json --- 200]"/>
		<logger level="INFO" doc:name="Logger"  />
	</flow>
	<flow name="http-bad-status"  >
		<http:listener doc:name="Listener"  config-ref="HTTP_Listener_config" path="/test-bad-status"/>
		<logger level="INFO" doc:name="Logger"  />
		<set-payload value="Received in App2" doc:name="Set Payload"  />
		<set-variable variableName="httpStatus" value="#[output json --- 'NotANumber']"/>
		<logger level="INFO" doc:name="Logger"  />
	</flow>
	<flow name="http-wildcard-listener"  >
		<http:listener doc:name="Listener"  config-ref="HTTP_Listener_config" path="/test-wildcard/*"/>
		<logger level="INFO" doc:name="Logger"  />
		<set-payload value="Received in App2" doc:name="Set Payload"  />
		<set-variable variableName="httpStatus" value="#[200]"/>
		<logger level="INFO" doc:name="Logger"  />
	</flow>
	<flow name="mule-opentelemetry-app-2Flow"  >
		<http:listener doc:name="Listener"  config-ref="HTTP_Listener_config" path="/test"/>
		<logger level="INFO" doc:name="Logger"  />
		<set-payload value="Received in App2" doc:name="Set Payload"  />
		<set-variable variableName="httpStatus" value="#[200]"/>
		<logger level="INFO" doc:name="Logger"  />
	</flow>
	<flow name="http-test-without-status-variable"  >
		<http:listener doc:name="Listener"  config-ref="HTTP_Listener_config" path="/test/no-status"/>
		<logger level="INFO" doc:name="Logger"  />
		<set-payload value="Received in App2" doc:name="Set Payload"  />
		<!--<set-variable variableName="httpStatus" value="#[200]"/>-->
		<logger level="INFO" doc:name="Logger"  />
	</flow>
	<flow name="http-test-errorResponse-status-variable"  >
		<http:listener doc:name="Listener"  config-ref="HTTP_Listener_config" path="/test/error-status"/>
		<logger level="INFO" doc:name="Logger"  />
		<set-payload value="Received in App2" doc:name="Set Payload"  />
		<raise-error doc:name="Raise error"  type="ANY"/>
		<logger level="INFO" doc:name="Logger"  />
		<error-handler >
			<on-error-propagate enableNotifications="true" logException="true" doc:name="On Error Propagate"  >
				<set-variable value="#[500]" doc:name="Set Variable"  variableName="httpStatus"/>
			</on-error-propagate>
		</error-handler>
	</flow>

	<flow name="mule-opentelemetry-app-2-interceptor-test"  >
		<logger level="INFO" doc:name="Logger"  />
		<set-payload value="Received in App2" doc:name="Set Payload"  />
		<logger level="INFO" doc:name="Logger"  />
	</flow>
	<flow name="mule-opentelemetry-app-2Flow-requester-error"  >
		<http:listener doc:name="Listener"  config-ref="HTTP_Listener_config" path="/test-invalid-request"/>
		<logger level="INFO" doc:name="Logger"  />
		<set-payload value="Received in App2" doc:name="Set Payload"  />
		<http:request method="GET" doc:name="Request" config-ref="INVALID_HTTP_Request_configuration" path="/remote/invalid"/>
		<logger level="INFO" doc:name="Logger"  />
	</flow>
	<flow name="mule-opentelemetry-app-2-private-Flow-requester-error"  >
		<logger level="INFO" doc:name="Logger"  />
		<set-payload value="Received in App2" doc:name="Set Payload"  />
		<http:request method="GET" doc:name="Request" config-ref="INVALID_HTTP_Request_configuration" path="/remote/invalid"/>
		<logger level="INFO" doc:name="Logger"  />
	</flow>
	<flow name="mule-opentelemetry-app-2-private-Flow-requester_basepath"  >
		<logger level="INFO" doc:name="Logger"  />
		<set-payload value="Received in App2" doc:name="Set Payload"  />
		<http:request method="GET" doc:name="Request" config-ref="INVALID_HTTP_BasePath_Request_configuration" path="/remote/invalid"/>
		<logger level="INFO" doc:name="Logger"  />
	</flow>
	<flow name="Server400TestFlow"
		  >
		<http:listener doc:name="Listener"

					   config-ref="HTTP_Listener_config" path="/test/error/400">
			<http:response statusCode="400" />
		</http:listener>
		<logger level="INFO" doc:name="Logger"
				 message="start" />
	</flow>
	<flow name="mule-opentelemetry-app-2-context-propagation-source"  >
		<http:listener doc:name="Listener"  config-ref="HTTP_Listener_config" path="/test/propagation/source"/>
		<set-payload value="Received in App2" doc:name="Set Payload"  />
		<!-- to simulate two different traces, propagated correlrationId must be different than this flows correlationId id -->
		<http:request method="GET" doc:name="Request" config-ref="SELF_HTTP_Request_configuration" path="/test/propagation/target" correlationId="#[uuid()]">
			<http:headers ><![CDATA[#[output application/java
---
{
	"traceparent" : vars.OTEL_TRACE_CONTEXT.traceparent as String
}]]]></http:headers>
		</http:request>
	</flow>
	<flow name="mule-opentelemetry-app-2-context-propagation-target"  >
		<http:listener doc:name="Listener"  config-ref="HTTP_Listener_config" path="/test/propagation/target"/>
		<set-payload value="From Propagation target" doc:name="Set Payload"  />
	</flow>

	<flow name="mule-opentelemetry-app-requester-remote" >
		<http:listener doc:name="Listener" config-ref="HTTP_Listener_config" path="/test-remote-request"/>
		<http:request method="GET" doc:name="Request" config-ref="SELF_HTTP_Request_configuration" path="/test/remote/target"/>
		<logger level="INFO" doc:name="Logger"/>
	</flow>
	<flow name="mule-opentelemetry-app-2-remote-target" >
		<http:listener doc:name="Listener" config-ref="HTTP_Listener_config" path="/test/remote/target"/>
		<set-payload value="From Remote target" doc:name="Set Payload"/>
	</flow>



	<flow name="app-requester-scatter-gather" >
		<http:listener doc:name="Listener" config-ref="HTTP_Listener_config" path="/test-scatter-gather"/>
		<logger level="INFO" doc:name="Logger 3"  message="#['Log outside']"/>
		<scatter-gather doc:name="Scatter-Gather"  >
			<route >
				<logger level="INFO" doc:name="Logger 1"  message="#['Log route 1']"/>
				<flow-ref doc:name="sub-flow-call-remote-target"  name="sub-flow-call-remote-target"/>
			</route>
			<route >
				<logger level="INFO" doc:name="Logger 2"  message="#['Log route 1']"/>
				<flow-ref doc:name="sub-flow-call-remote-target"  name="sub-flow-call-remote-target"/>
			</route>
			<route >
				<logger level="INFO" doc:name="Logger 3"  message="#['Log route 1']"/>
				<flow-ref doc:name="sub-flow-call-remote-target"  name="sub-flow-call-remote-target"/>
			</route>
		</scatter-gather>
		<logger level="INFO" doc:name="Logger 3"  message="#['Log outside']"/>
		<flow-ref doc:name="sub-flow-call-remote-target"  name="sub-flow-call-remote-target"/>
		<logger level="INFO" doc:name="Logger"/>
	</flow>
	<sub-flow name="sub-flow-call-remote-target"  >
		<http:request method="GET" doc:name="Request" config-ref="SELF_HTTP_Request_configuration" path="/test/remote/target"/>
	</sub-flow>
	<flow name="flow-call-remote-with-expression"  >
		<http:request method="GET" doc:name="Request" config-ref="SELF_HTTP_Request_configuration" path="#[vars.resourcePath]"/>
	</flow>
	<flow name="flow-call-remote-with-host-static-expression"  >
		<set-variable variableName="hostname" value="0.0.0.0"/>
		<http:request method="GET" doc:name="Request" config-ref="SELF_EXPRESSION_HTTP_Request_configuration" path="#[vars.resourcePath]"/>
	</flow>
	<flow name="flow-call-remote-with-host-dynamic-json-expression"  >
		<set-variable variableName="hostname" value='#[output json --- Mule::p("http.host")]'/>
		<http:request method="GET" doc:name="Request" config-ref="SELF_EXPRESSION_HTTP_Request_configuration" path="#[vars.resourcePath]"/>
	</flow>
</mule>
