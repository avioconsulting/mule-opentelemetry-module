<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>com.avioconsulting.mule</groupId>
    <artifactId>avio-mule-modules-parent</artifactId>
    <version>1.3.0-7</version>
  </parent>
  <artifactId>mule-opentelemetry-module</artifactId>
  <version>2.9.2</version>
  <packaging>mule-extension</packaging>

  <name>${project.groupId}:${project.artifactId}</name>
  <description>Mule Extension for generating OpenTelemetry traces from Mule Applications</description>
  <url>https://github.com/avioconsulting/mule-opentelemetry-module</url>

  <developers>
    <developer>
      <name>Adam DesJardin</name>
      <email>adesjardin@avioconsulting.com</email>
      <organization>AVIO Consulting</organization>
      <organizationUrl>https://www.avioconsulting.com</organizationUrl>
    </developer>
    <developer>
      <name>Manik Magar</name>
      <email>mmagar@avioconsulting.com</email>
      <organization>AVIO Consulting</organization>
      <organizationUrl>https://www.avioconsulting.com</organizationUrl>
    </developer>
    <developer>
      <name>Tim Gonzales</name>
      <email>tgonzales@avioconsulting.com</email>
      <organization>AVIO Consulting</organization>
      <organizationUrl>https://www.avioconsulting.com</organizationUrl>
    </developer>
  </developers>

  <scm>
    <connection>scm:git:${repository.url}</connection>
    <developerConnection>scm:ssh:${repository.url}</developerConnection>
    <url>${repository.url}</url>
  </scm>

  <properties>
    <!-- ${opentelemetry.version} is used d asciidoc generation -->
    <opentelemetry.version>1.45.0</opentelemetry.version>
    <opentelemetry-instrumentation.version>2.11.0</opentelemetry-instrumentation.version>
    <jmh.version>1.36</jmh.version>
  </properties>
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>io.opentelemetry.instrumentation</groupId>
        <!-- This BOM imports OTEL, OTEL-alpha, Semantic Conventions, and Instrumentation Dependencies -->
        <artifactId>opentelemetry-instrumentation-bom-alpha</artifactId>
        <version>${opentelemetry-instrumentation.version}-alpha</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>
  <dependencies>
    <dependency>
      <groupId>org.mule.runtime</groupId>
      <artifactId>mule-api</artifactId>
      <version>${mule.api.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.mule.runtime</groupId>
      <artifactId>mule-core</artifactId>
      <version>${mule.version}</version>
      <scope>provided</scope>
    </dependency>
    <!--	Open Telemetry	-->
    <dependency>
      <groupId>io.opentelemetry</groupId>
      <artifactId>opentelemetry-api</artifactId>
    </dependency>
    <dependency>
      <groupId>io.opentelemetry</groupId>
      <artifactId>opentelemetry-api-incubator</artifactId>
    </dependency>
    <dependency>
      <groupId>io.opentelemetry</groupId>
      <artifactId>opentelemetry-sdk-extension-autoconfigure</artifactId>
    </dependency>
    <dependency>
      <!--Adds Resources such as Host, Os, Process etc.-->
      <groupId>io.opentelemetry.instrumentation</groupId>
      <artifactId>opentelemetry-resources</artifactId>
    </dependency>
    <dependency>
      <groupId>io.opentelemetry</groupId>
      <artifactId>opentelemetry-sdk-extension-autoconfigure-spi</artifactId>
    </dependency>
    <dependency>
      <groupId>io.opentelemetry.semconv</groupId>
      <artifactId>opentelemetry-semconv</artifactId>
    </dependency>
    <dependency>
      <groupId>io.opentelemetry.semconv</groupId>
      <artifactId>opentelemetry-semconv-incubating</artifactId>
    </dependency>

    <dependency>
      <groupId>io.opentelemetry</groupId>
      <artifactId>opentelemetry-exporter-otlp</artifactId>
    </dependency>
    <dependency>
      <groupId>io.opentelemetry</groupId>
      <artifactId>opentelemetry-exporter-logging</artifactId>
    </dependency>
    <dependency>
      <!--Needed by HttpProcessorComponent-->
      <groupId>org.mule.connectors</groupId>
      <artifactId>mule-http-connector</artifactId>
      <classifier>mule-plugin</classifier>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.mule.services</groupId>
      <artifactId>mule-service-http</artifactId>
      <version>1.6.0</version>
      <classifier>mule-service</classifier>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mule.connectors</groupId>
      <artifactId>mule-db-connector</artifactId>
      <classifier>mule-plugin</classifier>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>com.mulesoft.connectors</groupId>
      <artifactId>anypoint-mq-connector</artifactId>
      <classifier>mule-plugin</classifier>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.mule.connectors</groupId>
      <artifactId>mule-objectstore-connector</artifactId>
      <classifier>mule-plugin</classifier>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.derby</groupId>
      <artifactId>derby</artifactId>
      <version>10.14.2.0</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mule.connectors</groupId>
      <artifactId>mule-sockets-connector</artifactId>
      <classifier>mule-plugin</classifier>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.mule.runtime</groupId>
      <artifactId>mule-module-service</artifactId>
      <version>${mule.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.mule.runtime</groupId>
      <artifactId>mule-module-extensions-spring-support</artifactId>
      <version>${mule.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.mule.modules</groupId>
      <artifactId>mule-tracing-module</artifactId>
      <classifier>mule-plugin</classifier>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mule.services</groupId>
      <artifactId>mule-service-scheduler</artifactId>
      <version>1.4.0</version>
      <classifier>mule-service</classifier>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <version>3.20.2</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>pl.pragmatists</groupId>
      <artifactId>JUnitParams</artifactId>
      <version>1.1.1</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.github.tomakehurst</groupId>
      <artifactId>wiremock-jre8</artifactId>
      <version>2.35.1</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.opentelemetry</groupId>
      <artifactId>opentelemetry-sdk-testing</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.avioconsulting.mule</groupId>
      <artifactId>mule-custom-logger</artifactId>
      <version>3.0.0</version>
      <classifier>mule-plugin</classifier>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.mulesoft.connectors</groupId>
      <artifactId>mule-kafka-connector</artifactId>
      <version>4.9.0</version>
      <classifier>mule-plugin</classifier>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.openjdk.jmh</groupId>
      <artifactId>jmh-core</artifactId>
      <version>${jmh.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.openjdk.jmh</groupId>
      <artifactId>jmh-generator-annprocess</artifactId>
      <version>${jmh.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>1.7.30</version>
    </dependency>
    <dependency>
      <groupId>org.awaitility</groupId>
      <artifactId>awaitility</artifactId>
      <version>4.1.0</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mule.modules</groupId>
      <artifactId>mule-apikit-module</artifactId>
      <classifier>mule-plugin</classifier>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <!-- Adding apikit module without xml-apis causes
            java.lang.NoClassDefFoundError: org/w3c/dom/ElementTraversal -->
      <groupId>xml-apis</groupId>
      <artifactId>xml-apis</artifactId>
      <version>1.4.01</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mule.connectors</groupId>
      <artifactId>mule-wsc-connector</artifactId>
      <classifier>mule-plugin</classifier>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <repositories>
    <repository>
      <id>anypoint-exchange</id>
      <name>Anypoint Exchange</name>
      <url>https://maven.anypoint.mulesoft.com/api/v1/maven</url>
      <layout>default</layout>
    </repository>
    <repository>
      <id>mulesoft-releases</id>
      <name>MuleSoft Releases Repository</name>
      <url>https://repository.mulesoft.org/releases/</url>
      <layout>default</layout>
    </repository>
  </repositories>
  <pluginRepositories>
    <pluginRepository>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
      <id>mulesoft-releases</id>
      <name>mulesoft release repository</name>
      <url>https://repository.mulesoft.org/releases/</url>
      <layout>default</layout>
    </pluginRepository>
  </pluginRepositories>

  <build>
    <plugins>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <configuration>
          <excludes>
            <exclude>com/avioconsulting/mule/opentelemetry/internal/opentelemetry/sdk/test/*</exclude>
          </excludes>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>maven-publish</id>
      <activation>
        <property>
          <name>release</name>
          <value>true</value>
        </property>
      </activation>

      <distributionManagement>
        <repository>
          <id>ossrh</id>
          <url>${nexus.url}/service/local/staging/deploy/maven2/</url>
        </repository>
        <snapshotRepository>
          <id>ossrh</id>
          <url>${nexus.url}/content/repositories/snapshots</url>
        </snapshotRepository>
      </distributionManagement>

      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-source-plugin</artifactId>
            <executions>
              <execution>
                <id>attach-sources</id>
                <goals>
                  <goal>jar</goal>
                </goals>
                <configuration>
                  <attach>true</attach>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-javadoc-plugin</artifactId>
            <configuration>
              <destDir>${project.build.directory}/docs/apidocs</destDir>
            </configuration>
            <executions>
              <execution>
                <id>attach-javadocs</id>
                <goals>
                  <goal>jar</goal>
                </goals>
                <configuration>
                  <attach>true</attach>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.sonatype.plugins</groupId>
            <artifactId>nexus-staging-maven-plugin</artifactId>
            <extensions>true</extensions>
            <configuration>
              <serverId>ossrh</serverId>
              <nexusUrl>${nexus.url}</nexusUrl>
              <autoReleaseAfterClose>true</autoReleaseAfterClose>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>gpg-sign</id>
      <activation>
        <property>
          <name>release</name>
          <value>true</value>
        </property>
      </activation>
      <properties>
        <gpg.executable>gpg</gpg.executable>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-gpg-plugin</artifactId>
            <version>1.6</version>
            <configuration>
              <!-- Prevent gpg from using pinentry programs -->
              <gpgArguments>
                <arg>--pinentry-mode</arg>
                <arg>loopback</arg>
              </gpgArguments>
            </configuration>
            <executions>
              <execution>
                <goals>
                  <goal>sign</goal>
                </goals>
                <phase>verify</phase>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>benchmark</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
              <argLine>-Djmh.ignoreLock=false -DrunJMH=true</argLine>
              <systemPropertyVariables>
                <enablePerformanceTests>false</enablePerformanceTests>
                <contiperf.active>false</contiperf.active>
                <mule.test.timeoutSecs>300</mule.test.timeoutSecs>
              </systemPropertyVariables>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.bsc.maven</groupId>
            <artifactId>maven-processor-plugin</artifactId>
            <executions>
              <execution>
                <id>process-test</id>
                <goals>
                  <goal>process-test</goal>
                </goals>
                <phase>generate-test-sources</phase>
                <configuration>
                  <processors>
                    <processor>${extensionsAnnotationProcessor}</processor>
                    <processor>org.openjdk.jmh.generators.BenchmarkProcessor</processor>
                  </processors>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <version>3.1.0</version>
            <executions>
              <execution>
                <id>run-benchmarks</id>
                <goals>
                  <goal>exec</goal>
                </goals>
                <phase>integration-test</phase>
                <configuration>
                  <classpathScope>test</classpathScope>
                  <executable>java</executable>
                  <workingDirectory>${basedir}/target</workingDirectory>
                  <arguments>
                    <argument>-classpath</argument>
                    <classpath></classpath>
                    <mainClass>org.openjdk.jmh.Main</mainClass>
                    <!--Run only a certain class-->
                    <argument>.*</argument>
                    <!--Create json report-->
                    <argument>-rf</argument>
                    <argument>json</argument>
                    <!--Enable gc profiler-->
                    <argument>-prof</argument>
                    <argument>gc</argument>
                    <!--Number of Iterations-->
                    <argument>-i</argument>
                    <argument>10</argument>
                    <!--Number of Warmup Iterations-->
                    <argument>-wi</argument>
                    <argument>10</argument>
                  </arguments>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
